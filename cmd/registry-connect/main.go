// Copyright 2022 Google LLC. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"context"
	"fmt"
	"os"

	"github.com/apigee/registry-experimental/cmd/registry-connect/discover"
	"github.com/apigee/registry-experimental/cmd/registry-connect/publish"
	"github.com/apigee/registry/pkg/log"
	"github.com/google/uuid"
	"github.com/spf13/cobra"
)

// Version value will be replaced by the release tag when the binaries are
// generated by GoReleaser.
var Version = "dev"

func main() {
	// Bind a logger instance to the local context with metadata for outbound requests.
	logger := log.NewLogger(log.DebugLevel)
	ctx := log.NewOutboundContext(log.NewContext(context.Background(), logger), log.Metadata{
		UID: fmt.Sprintf("%.8s", uuid.New()),
	})

	cmd := &cobra.Command{
		Use:     "registry-connect",
		Version: Version,
		Short:   "Provides Registry integration functions to external systems",
		Long: `The subcommands are designed to "discover" external data and convert 
it to a format that can be applied to Registry instance or to "publish" Registry data 
for inclusion in other systems in a format those systems can consume. Use the "--help"
flag on the subcommands for additional information.`,
	}

	cmd.AddCommand(discover.Command())
	cmd.AddCommand(publish.Command())

	if err := cmd.ExecuteContext(ctx); err != nil {
		fmt.Println("----")
		fmt.Println("Need more help?")
		fmt.Println("https://github.com/apigee/registry/wiki")
		os.Exit(1)
	}
}
